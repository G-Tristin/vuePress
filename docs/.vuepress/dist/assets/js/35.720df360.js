(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{183:function(t,e,n){"use strict";n.r(e);var s=n(0),a=Object(s.a)({},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"content"},[n("p",[t._v("#nginx")]),t._v(" "),t._m(0),t._v(" "),n("p",[t._v("代理是服务器与客户端之间假设的一层服务器，代理将接收客户端的请求并将它转发给服务器，然后将服务器的响应转发给客户端。")]),t._v(" "),n("p",[t._v("不管是正向代理还是反向代理实现的都是上诉功能")]),t._v(" "),t._m(1),t._v(" "),n("p",[t._v("正向代理是为客户端服务的，客户端可以依赖正向代理访问到它无法访问的服务器资源。正向代理对客户端时透明的但是对服务器时不透明的。即服务端并不知道自己收到的请求\n是来自客户端的还是代理服务器的。")]),t._v(" "),t._m(2),t._v(" "),n("p",[t._v("反向代理是给服务端服务的，反向代理可以帮助服务器接受来自客户端的请求，帮助服务器做请求转发、均衡荷载。")]),t._v(" "),n("p",[t._v("反向代理对服务器是透明的，对客户端时非透明的。即使我们并不知道我们访问的时代理服务器，而服务器知道反向代理在为它服务。")]),t._v(" "),t._m(3),t._v(" "),n("p",[t._v("使用反向代理的原因主要有2个")]),t._v(" "),n("p",[t._v("1.安全权限。使用反向代理之后用户无法直接访问到服务器，必须首先通过nginx。可以通过在nginx上将危险的或者没有权限的请求过滤掉。")]),t._v(" "),n("p",[t._v("2.均衡负载")]),t._v(" "),t._m(4),t._v(" "),n("p",[t._v("1.快速实现简短的访问限制  --\x3e即设置白名单与黑名单")]),t._v(" "),n("p",[t._v("2.解决跨域问题")]),t._v(" "),n("p",[t._v("由于浏览器与服务器存在的同源策略即当服务器与浏览器之间的端口域名和协议不同时就会存在跨域的问题 此时就可以使用代理服务器来代理请求因为\n服务器与服务器之间是没有同源策略的。")]),t._v(" "),n("p",[t._v("3.适配PC和移动的环境")]),t._v(" "),n("p",[t._v("现在很多网站都同时存在PC站和H5站，因此根据用户的浏览器环境来切换站点是很常见的需求。Nginx可以通过内置变量$http_user_agent,获取到请求客户端的\nuserAgent,从而知道用户是处于PC端还是移动端，进而控制重定向到h5站还是pc站。代码如下：")]),t._v(" "),t._m(5),n("p",[t._v("4.合并请求")]),t._v(" "),n("p",[t._v("前端性能优化种重要的一点就是尽量减少http请求的数量，通过nginx-http-concat模块(淘宝开发的第三方模块，需要单独安装)用一种特殊的请求rul规则\n例子(example.com/??1.js,2.js,3.js),前端可以将多个资源的请求合并为一个请求，后台Nginx会获取各个资源并拼接成一个结果经行返回。例如上面的例子通过\n一个请求将1.js,2.js,3.js资源合并成一个请求，减少了浏览器的开销。本地server mysite-base.com为例，static/js文件夹下有三个文件，分别是a.js，b.js,c.js。")]),t._v(" "),n("p",[t._v("Nginx的配置如下")]),t._v(" "),t._m(6),n("p",[t._v("当浏览器请求http://mysite-base.com/static/js/??a.js,b.js,c.js 时，发现三个js被合并成一个返回了。")]),t._v(" "),n("p",[t._v("5.图片处理\n在前端开发中，经常需要不同尺寸的图片。现在的云存储图片基本都提供处理服务(一般是通过在图片链接上加参数)。其实使用Nginx，可以通过几十行配置，\n搭建出一个属于自己的图片处理服务。完全能满足日常对图片的裁剪/缩放/旋转/图片品质等处理需求。要用到第三放模块ngx_http_image_filter_module。")]),t._v(" "),n("p",[t._v("代码示例：")]),t._v(" "),t._m(7),n("p",[t._v("这里只是最基本的配置。此外，可以通过proxy_cache配置Nginx缓存，避免每次请求都重新处理图片，减少Nginx服务器处理压力；还以可以通过和nginx-upload-module一起使用加入图片上传的功能等。")]),t._v(" "),n("p",[t._v("6.页面内容修改")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://juejin.im/post/5bacbd395188255c8d0fd4b2",target:"_blank",rel:"noopener noreferrer"}},[t._v("nginx介绍"),n("OutboundLink")],1)])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"正向代理和反向代理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正向代理和反向代理","aria-hidden":"true"}},[this._v("#")]),this._v(" 正向代理和反向代理")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"正向代理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正向代理","aria-hidden":"true"}},[this._v("#")]),this._v(" 正向代理")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"反向代理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#反向代理","aria-hidden":"true"}},[this._v("#")]),this._v(" 反向代理")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"为什么要用nginx做反向代理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么要用nginx做反向代理","aria-hidden":"true"}},[this._v("#")]),this._v(" 为什么要用nginx做反向代理")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"前端可以使用nginx做什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前端可以使用nginx做什么","aria-hidden":"true"}},[this._v("#")]),this._v(" 前端可以使用nginx做什么?")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("location / {\n      # 移动、pc设备适配\n      if ($http_user_agent ~* '(Android|webOS|iPhone|iPod|BlackBerry)') {\n          set $mobile_request '1';\n      }\n      if ($mobile_request = '1') {\n          rewrite ^.+ http://mysite-base-H5.com;\n      }\n  }  \n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("location /static/js/ {\n      concat on; # 是否打开资源合并开关\n      concat_types application/javascript; # 允许合并的资源类型\n      concat_unique off; # 是否允许合并不同类型的资源\n      concat_max_files 5; # 允许合并的最大资源数目\n  }\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('# 图片缩放处理\n  # 这里约定的图片处理url格式：以 mysite-base.com/img/路径访问\n  location ~* /img/(.+)$ {\n      alias /Users/cc/Desktop/server/static/image/$1; #图片服务端储存地址\n      set $width -; #图片宽度默认值\n      set $height -; #图片高度默认值\n      if ($arg_width != "") {\n          set $width $arg_width;\n      }\n      if ($arg_height != "") {\n          set $height $arg_height;\n      }\n      image_filter resize $width $height; #设置图片宽高\n      image_filter_buffer 10M;   #设置Nginx读取图片的最大buffer。\n      image_filter_interlace on; #是否开启图片图像隔行扫描\n      error_page 415 = 415.png; #图片处理错误提示图，例如缩放参数不是数字\n  }\n')])])])}],!1,null,null,null);e.default=a.exports}}]);
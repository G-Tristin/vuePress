{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{202:function(e,n,t){\"use strict\";t.r(n);var a=t(0),s=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t(\"div\",{staticClass:\"content\"},[t(\"p\",[e._v(\"#interface和type的用法\")]),e._v(\" \"),t(\"h2\",{attrs:{id:\"相同点\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#相同点\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" 相同点\")]),e._v(\" \"),t(\"ol\",[t(\"li\",[t(\"p\",[e._v(\"都可以用来描述一个对象或者函数\")])]),e._v(\" \"),t(\"li\",[t(\"p\",[e._v(\"都允许扩展(extends) 实现的效果差不多但是二者的语法不太相同\")])])]),e._v(\" \"),t(\"h2\",{attrs:{id:\"不同点\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#不同点\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" 不同点\")]),e._v(\" \"),t(\"ol\",[t(\"li\",[e._v(\"type可以而interface不可以\")])]),e._v(\" \"),t(\"p\",[e._v(\"type 可以申明基本类型别名、联合类型、元组等类型\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"// 基本类型别名\\ntype Name = string\\n\\n// 联合类型\\n\\ninterface dog {\\n    wang()\\n}\\n\\ninterface cat {\\n    miao()\\n}\\n\\ntype Pet = dog | cat \\n\\n// 具体定义数组每个位置的类型\\n\\ntype PetList = [dog , Pet]\\n\")])])]),t(\"ol\",{attrs:{start:\"2\"}},[t(\"li\",[e._v(\"interface可以但是type不行\")])]),e._v(\" \"),t(\"p\",[e._v(\"interface能够申明合并\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"interface User{\\n    name:string,\\n    age:number\\n}\\n\\ninterface User{\\n    sex:string\\n}\\n\\nlet Jim:User = {\\n    name:'Jim',\\n    age:20,\\n    sex:'mail'\\n}\\n\")])])]),t(\"p\",[e._v(\"interface有可选属性和只读属性\")]),e._v(\" \"),t(\"h3\",{attrs:{id:\"实现与继承\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#实现与继承\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" 实现与继承\")]),e._v(\" \"),t(\"p\",[e._v(\"extends很明显就是ES6里面的类继承，那么implement又是做什么的呢?它和extends有什么不同?\")]),e._v(\" \"),t(\"p\",[e._v(\"implement,实现。与C#或者JAVA里的接口的基本作用一样，Typescript也能够用它来明确的强制一个类去符合某种契约\")]),e._v(\" \"),t(\"p\",[e._v(\"implement基本用法:\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"interface IDeveloper{\\n    name:string,\\n    age?:number\\n}\\n\\ncorrect\\nclass dev implement IDeveloper{\\n    name:'js',\\n    age:26\\n}\\n\\nerr \\nclass dev2 implement IDeveloper{\\n    name:'js',\\n    sex:'mail'\\n}\\n\")])])])])}],!1,null,null,null);n.default=s.exports}}]);","extractedComments":[]}
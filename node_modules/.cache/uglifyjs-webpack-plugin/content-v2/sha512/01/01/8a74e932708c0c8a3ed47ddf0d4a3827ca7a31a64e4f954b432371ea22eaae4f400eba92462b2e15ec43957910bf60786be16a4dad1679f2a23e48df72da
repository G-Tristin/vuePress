{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{176:function(s,e,a){\"use strict\";a.r(e);var t=a(0),n=Object(t.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var s=this,e=s.$createElement,a=s._self._c||e;return a(\"div\",{staticClass:\"content\"},[a(\"h1\",{attrs:{id:\"node-基本模块\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#node-基本模块\",\"aria-hidden\":\"true\"}},[s._v(\"#\")]),s._v(\" node 基本模块\")]),s._v(\" \"),a(\"p\",[s._v(\"因为Node.js是运行在服务区端的JavaScript环境，服务器程序和浏览器程序相比，最大的特点是没有浏览器的安全限制了，而且，服务器程序必须能接收网络请求，读写文件，处理二进制内容，所以，Node.js内置的常用模块就是为了实现基本的服务器功能。这些模块在浏览器环境中是无法被执行的，因为它们的底层代码是用C/C++在Node.js运行环境中实现的\")]),s._v(\" \"),a(\"h2\",{attrs:{id:\"global\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#global\",\"aria-hidden\":\"true\"}},[s._v(\"#\")]),s._v(\" global\")]),s._v(\" \"),a(\"p\",[s._v(\"node环境中唯一的全局变量global\")]),s._v(\" \"),a(\"h2\",{attrs:{id:\"process\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#process\",\"aria-hidden\":\"true\"}},[s._v(\"#\")]),s._v(\" process\")]),s._v(\" \"),a(\"p\",[s._v(\"也是有node提供的一个对象,它代表着node.js的进程.可以通过process对象获取到很多有用的信息\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"process = global.process\\nprocess.cwd():返回当前的工作目录\\nprocess.chdir():切换当前的工作目录\\n\")])])]),a(\"p\",[s._v(\"javascript是由事件驱动执行的单线程模型,node.js也是.node.js不断执行响应事件的javascript函数,直到没有任何响应事件的函数\\n可以执行时,node.js就会推出应用程序.\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"process.nextTick(fn)\\n\")])])]),a(\"p\",[s._v(\"fn函数将在下一次事件循环当中被调用\")]),s._v(\" \"),a(\"p\",[s._v(\"node.js进程本身的事件就是由process对象来处理的.如果我们响应exit事件,就可以再应用程序即将结束的时候执行某个函数.\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"process.on('exit',function(){\\n    console.log('程序进程即将结束')\\n})\\n\")])])]),a(\"h2\",{attrs:{id:\"判断javasctipt执行环境\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#判断javasctipt执行环境\",\"aria-hidden\":\"true\"}},[s._v(\"#\")]),s._v(\" 判断javaSctipt执行环境\")]),s._v(\" \"),a(\"p\",[s._v(\"很多javaScript代码既可以在浏览器环境下执行页可以在node.js环境下执行,但有些时候,程序本身需要判断自己到底在哪个环境当中执行,常用的判断浏览器执行环境的方式就是判断全局变量\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"if(typeof(window) == 'undefined'){\\n  console.log('当前环境是node环境')\\n}elseP{\\n  console.log('当前环境是浏览器环境')\\n}\\n\")])])])])}],!1,null,null,null);n.options.__file=\"node基本模块.md\";e.default=n.exports}}]);","extractedComments":[]}
{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{170:function(r,e,t){\"use strict\";t.r(e);var i=t(0),a=Object(i.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var r=this,e=r.$createElement,t=r._self._c||e;return t(\"div\",{staticClass:\"content\"},[t(\"h1\",{attrs:{id:\"javascript\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#javascript\",\"aria-hidden\":\"true\"}},[r._v(\"#\")]),r._v(\" javascript\")]),r._v(\" \"),t(\"h2\",{attrs:{id:\"import-与-require的区别\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#import-与-require的区别\",\"aria-hidden\":\"true\"}},[r._v(\"#\")]),r._v(\" import 与 require的区别\")]),r._v(\" \"),t(\"p\",[r._v(\"require()方法是commonJS所使用的引用模块的方法，一般用于服务器加载模块.\")]),r._v(\" \"),t(\"p\",[r._v(\"import 是ES6新增的浏览器加载模块的方法.\")]),r._v(\" \"),t(\"h3\",{attrs:{id:\"调用时间\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#调用时间\",\"aria-hidden\":\"true\"}},[r._v(\"#\")]),r._v(\" 调用时间\")]),r._v(\" \"),t(\"p\",[r._v(\"require是运行时调用，所以require理论上可以运用在代码的任何地方\")]),r._v(\" \"),t(\"p\",[r._v(\"import是编译时调用，但是并不一定需要写在开头，import命令具有提升效果，会提升到整个模块的头部\")]),r._v(\" \"),t(\"h3\",{attrs:{id:\"本质\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#本质\",\"aria-hidden\":\"true\"}},[r._v(\"#\")]),r._v(\" 本质\")]),r._v(\" \"),t(\"p\",[r._v(\"require是赋值过程，其实require的结果就是对象、数字、字符串、函数等，再把require的结果赋值给某个变量\")]),r._v(\" \"),t(\"p\",[r._v(\"import是解构过程，但是目前所有的引擎都还没有实现import，我们在node中使用babel支持ES6，也仅仅是将ES6转码为ES5再执行，import语法会被转码为require\")]),r._v(\" \"),t(\"h3\",{attrs:{id:\"使用场景\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#使用场景\",\"aria-hidden\":\"true\"}},[r._v(\"#\")]),r._v(\" 使用场景\")]),r._v(\" \"),t(\"ul\",[t(\"li\",[r._v(\"import\")])]),r._v(\" \"),t(\"p\",[r._v(\"import 形式的是es6中新增的语法，大部分浏览器不支持import ，所以要用babel转换成CommonJS规范形式的代码。\\nCommonJS 是一种模块化规范，浏览器本身也没有require这种语法，是用原生js实现的功能。\")]),r._v(\" \"),t(\"ul\",[t(\"li\",[r._v(\"require\")])]),r._v(\" \"),t(\"p\",[r._v(\"Node 中就是以CommonJS规范 为基础，可以直接使用require，但是客户端中却没有require 和 module语法。\\nbabel 对 require是不进行处理的，一般的打包工具都会做好处理，例如fis、webpack。\")]),r._v(\" \"),t(\"p\",[r._v(\"简而言之就是 import 和 require都可以在浏览器和服务端使用，只要你使用了打包工具进行处理。\")]),r._v(\" \"),t(\"h2\",{attrs:{id:\"import-比较-require-的优势\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#import-比较-require-的优势\",\"aria-hidden\":\"true\"}},[r._v(\"#\")]),r._v(\" import 比较 require 的优势\")]),r._v(\" \"),t(\"p\",[r._v(\"使用require加载模块，实质是整体加载fs模块(即会加载fs的所有方法)，然后再读取我们使用到的部分方法。\\n但是使用import加载模块，实质是从fs模块中加载指定的方法，其他方法不加载，这种加载方式称之为”编译时加载“，或者叫做\\n静态加载，即ES6可以在编译时就完成加载，效率更高。\")])])}],!1,null,null,null);a.options.__file=\"javascript.md\";e.default=a.exports}}]);","extractedComments":[]}